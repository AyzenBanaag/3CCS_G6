@model BarangayBayanihanOnline.Models.User

@{
    ViewData["Title"] = "Delete User";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-container">
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">Delete User</h1>
            <p class="page-subtitle">Are you sure you want to delete this user?</p>
        </div>
        <div class="header-actions">
            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to Users
            </a>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="delete-warning">
                <div class="warning-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div class="warning-text">
                    <h3>Warning: This action cannot be undone</h3>
                    <p>Deleting this user will permanently remove their account and all associated data from the system. This operation cannot be reversed.</p>
                </div>
            </div>

            <div class="user-info-card">
                <div class="user-info-header">
                    <div class="user-avatar-large">
                        @Model.FullName[0]
                    </div>
                    <h2 class="user-name">@Model.FullName</h2>
                    <span class="status-badge @(Model.IsAdmin ? "admin" : "user")">
                        @(Model.IsAdmin ? "Admin" : "User")
                    </span>
                </div>
                <div class="user-details-grid">
                    <div class="detail-item">
                        <div class="detail-label">Email Address</div>
                        <div class="detail-value">@Model.Email</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">User ID</div>
                        <div class="detail-value">@Model.UserId</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Last Login</div>
                        <div class="detail-value">@(Model.LastLogin?.ToString("g") ?? "Never")</div>
                    </div>
                    <div class="detail-item">
                        <div class="detail-label">Created At</div>
                        <div class="detail-value">@Model.CreatedAt.ToString("MMM d, yyyy")</div>
                    </div>
                </div>
            </div>

            <form asp-action="DeleteUser" method="post">
                <input type="hidden" asp-for="UserId" />
                <div class="confirmation-box">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="confirmDelete" required>
                        <label class="form-check-label" for="confirmDelete">
                            I understand that this action cannot be reversed
                        </label>
                    </div>
                </div>

                <div class="form-actions">
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    <button type="submit" class="btn btn-danger" id="deleteBtn" disabled>
                        <i class="fas fa-trash-alt me-1"></i> Delete User
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Page styles */
        .page-container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .page-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin: 0 0 0.25rem;
            color: var(--dark-color);
        }

        .page-subtitle {
            color: var(--text-muted);
            margin: 0;
        }

        /* Card styles */
        .card {
            background-color: var(--card-bg);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        .card-body {
            padding: 2rem;
        }

        /* Warning box */
        .delete-warning {
            background-color: rgba(231, 76, 60, 0.1);
            border-left: 4px solid var(--danger-color);
            padding: 1.5rem;
            border-radius: var(--radius);
            margin-bottom: 2rem;
            display: flex;
            gap: 1.5rem;
            align-items: flex-start;
        }

        .warning-icon {
            color: var(--danger-color);
            font-size: 2rem;
            flex-shrink: 0;
        }

        .warning-text h3 {
            font-size: 1.25rem;
            font-weight: 600;
            margin: 0 0 0.5rem;
            color: var(--danger-color);
        }

        .warning-text p {
            margin: 0;
            color: var(--text-color);
        }

        /* User info card */
        .user-info-card {
            background-color: var(--light-color);
            border-radius: var(--radius);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .user-info-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 2rem;
        }

        .user-avatar-large {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .user-name {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0 0 0.5rem;
            color: var(--dark-color);
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 50rem;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: capitalize;
        }

            .status-badge.admin {
                background-color: rgba(120, 44, 233, 0.1);
                color: #7209b7;
            }

            .status-badge.user {
                background-color: rgba(13, 110, 253, 0.1);
                color: #0d6efd;
            }

        .user-details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .detail-item {
            padding-bottom: 0.5rem;
        }

        .detail-label {
            color: var(--text-muted);
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
        }

        .detail-value {
            font-weight: 500;
            color: var(--dark-color);
        }

        /* Confirmation box */
        .confirmation-box {
            background-color: var(--light-color);
            padding: 1.5rem;
            border-radius: var(--radius);
            margin-bottom: 2rem;
        }

        .form-check-input:checked {
            background-color: var(--danger-color);
            border-color: var(--danger-color);
        }

        /* Form actions */
        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .page-header

        {
            flex-direction: column;
            align-items: flex-start;
        }

        .delete-warning {
            flex-direction: column;
        }

        .user-details-grid {
            grid-template-columns: 1fr;
        }

        .form-actions {
            flex-direction: column-reverse;
        }

            .form-actions .btn {
                width: 100%;
            }

        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const confirmCheckbox = document.getElementById('confirmDelete');
            const deleteBtn = document.getElementById('deleteBtn');

            confirmCheckbox.addEventListener('change', function () {
                deleteBtn.disabled = !this.checked;
            });
        });
    </script>
}